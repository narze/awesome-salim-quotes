import { promises as fs } from "fs"
import { GetStaticPaths, GetStaticProps } from "next"
import Head from "next/head"
import React from "react"

import styles from "../styles/Home.module.css"
import Link from "next/link"

function Entry({ id, entry }: { id: Number; entry: string }) {
  // const router = useRouter()
  // const [entry, setEntry] = useState("")

  return (
    <div>
      <Head>
        <title>วาทกรรมสลิ่มสุดเจ๋ง</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.container}>
        <div>
          <h1 className={styles.title}>
            <span className={styles.red}>วาท</span>
            <span className={styles.white}>กรรม</span>
            <span className={styles.blue}>สลิ่ม</span>
            <span className={styles.white}>สุด</span>
            <span className={styles.red}>เจ๋ง</span>
          </h1>
          <p className={styles.entryRoulette}>
            <span>{entry}</span>
          </p>
          <p className={styles.action}>
            <Link href="/" passHref>
              <button className={styles.button}>🚴‍♀️ ลองใหม่ 🚴‍♂️</button>
            </Link>
          </p>
        </div>
      </main>
    </div>
  )
}

// This function gets called at build time
export const getStaticPaths: GetStaticPaths = async () => {
  // export async function getStaticPaths() {
  const readme = await fs.readFile("README.md", "utf8")

  const entries = readme
    .split("\n")
    .filter((line) => line.startsWith("- "))
    .map((l) => l.slice(2))

  // Get the paths we want to pre-render based on posts
  const paths = entries.map((entry, idx) => ({
    params: { id: `${idx + 1}` },
  }))

  // We'll pre-render only these paths at build time.
  // { fallback: false } means other routes should 404.
  return { paths, fallback: false }
}

// This also gets called at build time
export const getStaticProps: GetStaticProps = async (context) => {
  const id = Number(context.params!.id)
  // export async function getStaticProps({ params }) {
  const readme = await fs.readFile("README.md", "utf8")

  const entries = readme
    .split("\n")
    .filter((line) => line.startsWith("- "))
    .map((l) => l.slice(2))

  const entry = entries[id - 1]

  // Pass post data to the page via props
  return { props: { entry, id } }
}

export default Entry
